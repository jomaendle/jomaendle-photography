---
import { getLangFromUrl, getNavItemLink, useTranslations } from '../i18n/utils';
import { MOBILE_LINKS } from '../models/nav-item';
import { X, Menu } from 'lucide-react';
import Footer from './Footer.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<style>
	#mobile-menu {
		transition: all 0.5s ease;
		transform: translateX(100%);
		opacity: 0;
		background: #f2f2f2;
	}

	#mobile-menu.open {
		transform: translateY(0);
		opacity: 1;
	}
</style>

<div class="flex justify-between md:hidden">
	<button id="mobile-menu-button" class="text-hover z-50 text-2xl">
		<span id="menuSvg">
			<Menu />
		</span>

		<span id="closeSvg" class="hidden">
			<X />
		</span>
	</button>
</div>

<div
	id="mobile-menu"
	class="fixed inset-0 z-40 flex h-full w-full flex-col gap-6 bg-gray-200 p-2 pt-12"
>
	{
		MOBILE_LINKS.map((link) => (
			<a href={getNavItemLink(lang, link)} class="text-hover block px-4 py-2 text-2xl">
				{t(link.labelKey)}
			</a>
		))
	}

	<hr class="border-t-2 border-gray-200" />

	<a
		href="https://calendly.com/jo-maendle/erstgespraech"
		rel="noreferrer"
		data-skip-router-check
		target="_blank"
		class="text-hover flex items-center gap-2 px-4 py-2 text-lg"
	>
		<span class="flex-1">{t('cta.call')}</span>
		<svg
			xmlns="http://www.w3.org/2000/svg"
			fill="none"
			viewBox="0 0 24 24"
			stroke-width="2"
			stroke="currentColor"
			class="h-5 w-5"
		>
			<path
				stroke-linecap="round"
				stroke-linejoin="round"
				d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25"></path>
		</svg>
	</a>
	<div id="langPicker" class="flex flex-1 items-end justify-center pb-4">
		<Footer />
	</div>
</div>

<script>
	import { navigate } from 'astro:transitions/client';

	function attachEventListeners() {
		const mobileMenuButton = document.getElementById('mobile-menu-button');
		const mobileMenu = document.getElementById('mobile-menu');
		const closeSvg = document.getElementById('closeSvg');
		const menuSvg = document.getElementById('menuSvg');
		const allLinks = mobileMenu.querySelectorAll(
			'a, hr, div#langPicker'
		) as NodeListOf<HTMLElement>;

		mobileMenuButton.addEventListener('click', () => {
			closeSvg.classList.toggle('hidden');
			mobileMenu.classList.toggle('open');
			menuSvg.classList.toggle('hidden');
			document.body.classList.toggle('overflow-hidden');

			allLinks.forEach((link, index) => {
				link.animate(
					{ opacity: [1] },
					{ duration: 500, delay: (index + 1) * 200, fill: 'forwards' }
				);
				if (link.tagName === 'A' && !link.hasAttribute('data-skip-router-check')) {
					link.addEventListener('click', onLinkClick);
				}
			});
		});

		function onLinkClick(event: Event) {
			event.preventDefault();
			mobileMenu.classList.remove('open');
			setTimeout(() => {
				const target = event.target as HTMLAnchorElement;
				navigate(target.href).then(() => {
					closeSvg.classList.add('hidden');
					menuSvg.classList.remove('hidden');
					allLinks.forEach((link) => (link.style.opacity = '0'));
				});
			}, 200);
		}
	}

	document.addEventListener('astro:page-load', attachEventListeners);
</script>
