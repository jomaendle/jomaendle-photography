---
import {getLangFromUrl} from "../i18n/utils";
import type {CollectionEntry} from "astro:content"
import {getImage, Image} from 'astro:assets';

interface Props {
    images: CollectionEntry<'portrait-images'>[] | CollectionEntry<'landscapes'>[];
}

const lang = getLangFromUrl(Astro.url);
const {images} = Astro.props;

/*const optimizedImages = images.map(async (image) => {
    const newImage = await getImage({
        // @ts-ignore
        src: image.data.image,
        width: 400,
        quality: 80,
        format: 'webp',
    });
    return {
        ...image,
        data: {
            ...image.data,
            image: newImage
        },
    }
});

const res = await Promise.all(optimizedImages);*/

function getUrlForImage(image) {
    if (Astro.url.pathname.includes('nature')) {
        return `../../${lang}/details/${image.slug}`;
    }

    return `../${lang}/details/${image.slug}`;
}
---

<div class="w-full overflow-y-auto h-full pb-16 pr-4 sm:pr-8 z-0">
    <div class="grid md:grid-cols-2 gap-4 xl:grid-cols-3 max-w-7xl">
        {images.map((image) => (
                <a href={getUrlForImage(image)} class="overflow-hidden">
                    <Image src={image.data.image}
                         class="hover:scale-105 transition-all opacity-0 duration-500"
                         transition:name=`media-image-${image.slug}`
                           onload="this.classList.remove('opacity-0')"
                         alt="" oncontextmenu="return false;"/>
                </a>
        ))}
    </div>
</div>
